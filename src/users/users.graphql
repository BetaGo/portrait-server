type User {
  id: Int!
  thirdLoginId: String
  username: String
  displayName: String!
  email: String
  avatar: String
  ThirdLoginType: String
  phone: String
}

input AddUserInput {
  username: String!
  displayName: String!
  password: String!
  email: String
  avatar: String
  phone: String
}

type AddUserPayload {
  id: Int!
  accessToken: String!
  refreshToken: String!
}

input UserLoginInput {
  account: String!
  password: String!
}

type UserLoginPayload {
  accessToken: String!
}

input UpdateUserInput {
  displayName: String
  email: String
  avatar: String
  phone: String
  password: String
}

type UserWord {
  id: Int!
  word: String!
  translation: String
  example: String
  forgottenTimes: Int!
  rememberTimes: Int!
}

input AddUserWordInput {
  word: String!
  translation: String
  example: String
}

type AddUserWordPayload {
  id: Int!
  word: String!
  translation: String
  example: String
}

input UpdateUserWordInput {
  id: Int!
  word: String
  translation: String
  example: String
  forgottenTimes: Int
  rememberTimes: Int
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type UserWordsEdge {
  cursor: String!
  node: UserWord!
}

type UserWordsResultCursor {
  edges: [UserWordsEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type NewWordsResultCursor {
  edges: [UserWordsEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input RefreshTokenInput {
  refreshToken: String!
  accessToken: String!
}

type RefreshTokenPayload {
  refreshToken: String!
  accessToken: String!
}

type LoginTokenPayload {
  token: String!
  publicKey: String!
}

type Query {
  user: User
  userLogin(input: UserLoginInput): UserLoginPayload
  userWord(word: String!): UserWord
  allUserWords(first: Int!, after: String): UserWordsResultCursor
  allNewWords(first: Int!, after: String): NewWordsResultCursor
  refreshToken(input: RefreshTokenInput): RefreshTokenPayload
  loginToken: LoginTokenPayload
}

type Mutation {
  addUser(input: AddUserInput): AddUserPayload
  updateUser(input: UpdateUserInput): UpdateResult
  addUserWord(input: AddUserWordInput!): AddUserWordPayload
  updateUserWord(input: UpdateUserWordInput!): UpdateResult
}
